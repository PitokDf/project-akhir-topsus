services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/uastopsus.conf:/etc/nginx/conf.d/default.conf:ro
      - ./menu-service/uploads:/usr/share/nginx/html/uploads:ro
    depends_on:
      - frontend
      - auth-service
      - menu-service
      - transaction-service
      - report-service
      - notification-service
    networks:
      - cashiersystem-network

  frontend:
    build: ./frontend
    env_file:
      - ./frontend/.env
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://api.cafe.com
      - NEXT_PUBLIC_TRANSACTION_SERVICE_URL=http://api.cafe.com
      - NODE_ENV=production
    depends_on:
      - auth-service
    networks:
      - cashiersystem-network

  auth-service:
    build: ./auth-service
    env_file:
      - ./auth-service/.env
    environment:
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=${MAIN_DB_URL}
    depends_on:
      db:
        condition: service_healthy
      migration-service:
        condition: service_completed_successfully
    networks:
      - cashiersystem-network

  menu-service:
    build: ./menu-service
    env_file:
      - ./menu-service/.env
    environment:
      - PORT=3002
      - DATABASE_URL=${MAIN_DB_URL}
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
      migration-service:
        condition: service_completed_successfully
    volumes:
      - ./menu-service/uploads:/usr/src/app/uploads
    networks:
      - cashiersystem-network

  transaction-service:
    build: ./transaction-service
    env_file:
      - ./transaction-service/.env
    environment:
      - PORT=3003
      - DATABASE_URL=${MAIN_DB_URL}
      - MIDTRANS_SERVER_KEY=${MIDTRANS_SERVER_KEY}
      - MIDTRANS_CLIENT_KEY=${MIDTRANS_CLIENT_KEY}
      - RABBITMQ_URL=${RABBITMQ_URL}
    depends_on:
      db:
        condition: service_healthy
      migration-service:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_started
    networks:
      - cashiersystem-network

  report-service:
    build: ./report-service
    env_file:
      - ./report-service/.env
    environment:
      - PORT=3004
      - DATABASE_URL=${MAIN_DB_URL}
      - MENU_SERVICE_URL=http://menu-service:3002/api/v1
      - TRANSACTION_SERVICE_URL=http://transaction-service:3003/api/v1
    depends_on:
      db:
        condition: service_healthy
      migration-service:
        condition: service_completed_successfully
    networks:
      - cashiersystem-network

  notification-service:
    build: ./notification-service
    env_file:
      - ./notification-service/.env
    environment:
      - PORT=4005
      - RABBITMQ_URL=${RABBITMQ_URL}
      - MIDTRANS_SERVER_KEY=${MIDTRANS_SERVER_KEY}
    depends_on:
      - rabbitmq
    networks:
      - cashiersystem-network

  db:
    image: postgres:14-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=maindb
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - cashiersystem-network

  migration-service:
    build: ./migration-service
    env_file:
      - ./migration-service/.env
    environment:
      - DATABASE_URL=${MAIN_DB_URL}
    depends_on:
      db:
        condition: service_healthy
    command: ["tail", "-f", "/dev/null"]
    networks:
      - cashiersystem-network

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - cashiersystem-network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cashiersystem-network

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:

networks:
  cashiersystem-network:
    driver: bridge
